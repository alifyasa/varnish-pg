varnish-cache:
  server:
    vclConfig: |
      vcl 4.1;

      backend default {
        .host = "simple-server-service";  # Define the backend server address
        .port = "80";                     # Define the backend server port

        .connect_timeout = 1s;            # Set timeout for backend connection
        .first_byte_timeout = 5s;         # Set timeout for first byte response
        .between_bytes_timeout = 2s;      # Set timeout for subsequent data transfers
      }

      sub vcl_backend_fetch {
        set bereq.http.Host = "www.example.com";  # Set Host header for backend requests
        set bereq.http.X-Custom-Header = "CustomValue";  # Add custom header to backend request
      }

      sub vcl_backend_response {
        if (beresp.status == 200) {
          set beresp.ttl = 1m;  # Cache successful responses for 1 minute
        }
      }

      sub vcl_backend_response {
        set beresp.grace = 1h;  # Serve stale responses for 1 hour when the cache is expired
      }

      sub vcl_recv {
        if (req.http.Cookie) {
          return (pass);  # Bypass cache for requests containing cookies
        }
      }

      sub vcl_hash {
          hash_data(req.url);  # Create cache key based on request URL

          if (req.http) {
              foreach (req.http) {
                  if (beresp.http.Cache-Control && req.http.Cache-Control) {
                      continue;  # Skip headers affecting cache behavior
                  }
                  hash_data(req.http[header]);  # Include headers in cache key
              }
          }

          hash_data(req.http.X-Forwarded-For);  # Include forwarded IP in cache key
          hash_data(client.ip);  # Include client's IP in cache key
      }
